import styles from "@/styles/Home.module.css";
import StatisticDisplay from "@/components/StatisticDisplay/StatisticDisplay";

import Link from "next/link";
import { motion } from "framer-motion";
import Head from "next/head";
import Timeline from "@/components/BarChart/Timeline";
import YearsList from "@/components/YearsList/YearsList";
import { useState } from "react";

import useSWR from "swr";
import { fetcher } from "../../lib/fetcher";

const Archive = () => {
  const [current, setCurrent] = useState("2022");

  const STATISTIC_URL = `https://vox-dashboard.ra-devs.tech/api/dashboards-statistic`;

  const { data: statisticData } = useSWR(STATISTIC_URL, fetcher, {
    revalidateIfStale: false,
    revalidateOnFocus: false,
    revalidateOnReconnect: false,
  });

  const statisticRender =
    statisticData &&
    // @ts-ignore
    statisticData.data.map((item, i) => {
      if (current == item.year) {
        return (
          <Link key={i} href={`/${current}/${item.month}`}>
            <StatisticDisplay
              mode="disactive"
              month={item.month}
              year={item.year}
              narratives={item.narrative}
              fakes={item.sub_narrative}
              sources={item.media}
            />
          </Link>
        );
      }
    });

  return (
    <>
      <Head>
        <title>Propaganda Diary | Archive</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.3, type: "tween" }}
        >
          <Timeline current={current} />
          <YearsList current={current} setCurrent={setCurrent} />
        </motion.div>

        <motion.div
          className={styles.archivePage}
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.3, type: "tween", delay: 0.2 }}
        >
          {statisticRender}
        </motion.div>
      </main>
    </>
  );
};

export default Archive;
